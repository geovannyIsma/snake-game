# azure-pipelines.yml
# Este pipeline construye tu imagen Docker, la envía a Azure Container Registry (ACR)
# y luego despliega la aplicación en Azure App Service.
# Finalmente, ejecuta las migraciones de Django en el contenedor desplegado.

trigger:
  - main # El pipeline se ejecutará cada vez que haya un push a la rama 'main'

resources:
  - repo: self # Define que el repositorio es el mismo donde está el pipeline

variables:
  dockerRegistryServiceConnection: '80947ddd-b5d5-47a6-a216-3f219b2edda6'
  imageRepository: 'geovannyismasnakegame'
  containerRegistry: 'snakegame.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/docker/dockerfile'
  tag: '$(Build.BuildId)'

  # Detalles de Azure App Service y la conexión de servicio a la suscripción de Azure
  azureSubscriptionServiceConnection: 'snake-game-con'
  resourceGroupName: 'snake-game'
  webAppName: 'snake-game-app'
  appServicePlan: 'ASP-snakegame-a47d'

stages:
  - stage: Build
    displayName: 'Build and Push Docker Image'
    jobs:
      - job: BuildJob
        displayName: 'Build and Push'
        pool:
          name: mypool # <--- ¡AHORA USANDO TU AGENTE AUTOHOSPEDADO!
          # vmImage: $(vmImageName) # Comentado ya no se usa el agente alojado
        steps:
          - task: Docker@2
            displayName: 'Build and push an image to container registry'
            inputs:
              command: buildAndPush
              repository: $(imageRepository)
              dockerfile: $(dockerfilePath)
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest
              buildContext: '$(Build.SourcesDirectory)'

  - stage: Deploy
    displayName: 'Deploy to Azure App Service'
    jobs:
      - job: DeployWeb
        displayName: 'Deploy Web App'
        pool:
          name: mypool # <--- ¡AHORA USANDO TU AGENTE AUTOHOSPEDADO!
          # vmImage: $(vmImageName) # Comentado ya no se usa el agente alojado

        steps:
          - task: AzureWebAppContainer@1
            displayName: 'Deploy Docker Image to Azure App Service'
            inputs:
              azureSubscription: $(azureSubscriptionServiceConnection)
              appName: $(webAppName)
              resourceGroupName: $(resourceGroupName)
              appType: webAppLinux
              # La imagen completa a desplegar desde ACR
              imageName: '$(containerRegistry)/$(imageRepository):$(tag)' # Combina el registro y el repositorio con la etiqueta
 